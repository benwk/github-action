name: API Test with Bruno

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      environment:
        required: true
        type: string
      pr-id:
        required: false
        type: string

jobs:
  test-api:
    timeout-minutes: 10
    name: API Test in ${{ inputs.environment }} environment
    runs-on: ubuntu-latest
    outputs:
      conclusion: ${{ steps.test-report.outputs.conclusion }}
      passed: ${{ steps.test-report.outputs.passed }}
      failed: ${{ steps.test-report.outputs.failed }}
      skipped: ${{ steps.test-report.outputs.skipped }}
      time: ${{ steps.test-report.outputs.time }}
      url: ${{ steps.test-report.outputs.url }}
      url_html: ${{ steps.test-report.outputs.url_html }}
    environment:
      name: ${{ inputs.environment }}
    permissions:
      contents: read
      actions: read
      checks: write
      deployments: write
      pull-requests: write
    steps:
      - name: Checkout test repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          token: ${{ secrets.GH_PAT }}
      - name: Install Bru CLI from NPM
        run: npm install -g @usebruno/cli
      - name: Run tests
        run: bru run --env ${{ inputs.environment }} --output report.xml --format junit
        env:
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
      - name: Publish Test Report
        id: test-report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report
          path: report.xml
          reporter: java-junit

  feedback-on-pr:
    timeout-minutes: 10
    if: ${{ inputs.pr-id }}
    name: Feedback on Pull Request
    needs: test-api
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR
        if: ${{ inputs.pr-id }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Hi Team, ${{ inputs.environment }} env API tests completed! :rocket:

            **Overview:**
            - Conclusion: ${{ needs.test-api.outputs.conclusion }}
            - Passed: ${{ needs.test-api.outputs.passed }}
            - Failed: ${{ needs.test-api.outputs.failed }}
            - Skipped: ${{ needs.test-api.outputs.skipped }}
            - Execution Time: ${{ needs.test-api.outputs.time }} ms
            - Detailed Report: ${{ needs.test-api.outputs.url_html }}
          reactions: eyes
          pr_number: ${{ inputs.pr-id }}
          comment_tag: api_tests
      - name: Add Label
        if: ${{ inputs.pr-id }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          number: ${{ inputs.pr-id }}
          labels: api
