name: Release a New Version

on:
  workflow_call:
    inputs:
      version-bump:
        required: true
        default: patch
        type: string
    outputs:
      result:
        description: "Release results"
        value: ${{ jobs.release.outputs.result }}
    
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.result.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_HUB_TOKEN }}
          # default depth is 1, which is not enough for changelog generation
          fetch-depth: 0
      - name: Checkout the release branch
        run: |
          CURRENT_VERSION=$(npm pkg get version --workspaces=false --raw | tr -d \")
          RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i $VERSION_BUMP)
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_ENV"
          git checkout -b release-$RELEASE_VERSION
        env:
          VERSION_BUMP: ${{ inputs.version-bump }}
      - name: Initialize Git user
        run: |
          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_EMAIL"
        env:
          GIT_USER_NAME: ${{ vars.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ vars.GIT_USER_EMAIL }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Initialise the NPM config
        run : npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install the dependancies
        run: npm ci
      - name: Run release
        run: npm run release $VERSION_BUMP --ci
        env:
          VERSION_BUMP: ${{ inputs.version-bump }}
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create Pull Request
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          target_branch: main
          source_branch: "release-${{ env.RELEASE_VERSION }}"
          github_token: ${{ secrets.GIT_HUB_TOKEN }}
          title: "Automated Release v${{ env.RELEASE_VERSION }}"
          # template: .github/PULL_REQUEST_TEMPLATE.md
          body: "**Automated pull request**"
          reviewer: benwk
          assignee: ${{ github.actor }}
          label: release
      - name: Set release result
        id: result
        run: echo "result=${{ job.status }}" >> $GITHUB_OUTPUT
