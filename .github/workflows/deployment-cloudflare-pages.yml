name: Cloudflare Pages Deployment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      public-domain:
        required: true
        type: string
      public-twitter:
        required: true
        type: string
      pr-id:
        required: false
        type: number
    outputs:
      result:
        description: "Deployment results"
        value: ${{ jobs.deploy.outputs.result }}
    secrets:
      CLOUDFLARE_API_TOKEN:
        required: true

jobs:
  build:
    timeout-minutes: 10
    name: Build the application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build application
        run: |
          npm ci
          npm run build --if-present
        env:
          PUBLIC_DOMAIN: ${{ inputs.public-domain }}
          PUBLIC_TWITTER: ${{ inputs.public-twitter }}
      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path:  |
            dist
            function
          retention-days: 3

  deploy:
    timeout-minutes: 10
    name: Publish to ${{ inputs.environment }} environment
    needs: build
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.result.outputs.result }}
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ inputs.public-domain }}
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        # with:
        #   name: app

      - name: Publish to Cloudflare Pages
        id: publish
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ vars.CLOUDFLARE_PROJECT }}
          directory: dist
          branch: main
          workingDirectory: app
          wranglerVersion: '3'
      - name: Outputs
        run: |
          echo "ID: ${{ steps.publish.outputs.id }}"
          echo "URL: ${{ steps.publish.outputs.url }}"
          echo "Environment: ${{ steps.publish.outputs.environment }}"
          echo "Alias: ${{ steps.publish.outputs.alias }}"
      - name: Set deployment result
        id: result
        run: echo "result=${{ job.status }}" >> $GITHUB_OUTPUT

  comment-on-pr:
    timeout-minutes: 10
    name: Comment on Pull Request
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR
        if: ${{ inputs.pr-id }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Hi @Aliaic, ${{ inputs.environment }} env deployment successful! :rocket:
            Preview URL is ready: https://${{ inputs.public-domain }}
          reactions: eyes, rocket
          pr_number: ${{ inputs.pr-id }}
